{"version":3,"sources":["components/map.js","Invitation.js","index.js"],"names":["mapStyles","width","height","MapContainer","props","displayMarkers","state","stores","map","store","index","key","id","position","lat","latitude","lng","longitude","onClick","console","log","google","this","zoom","style","initialCenter","Component","GoogleApiWrapper","apiKey","ReactDOM","render","document","getElementById"],"mappings":"qlBAKMA,EAAY,CAChBC,MAAO,OACPC,OAAQ,QAGGC,EAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,eAAiB,WACf,OAAO,EAAKC,MAAMC,OAAOC,KAAI,SAACC,EAAOC,GACnC,OACE,kBAAC,SAAD,CACEC,IAAKD,EACLE,GAAIF,EACJG,SAAU,CACRC,IAAKL,EAAMM,SACXC,IAAKP,EAAMQ,WAEbC,QAAS,kBAAMC,QAAQC,IAAI,0BAlBjC,EAAKd,MAAQ,CACXC,OAAQ,CACN,CAAEQ,SAAU,WAAYE,UAAW,YACnC,CAAEF,SAAU,UAAWE,UAAW,aANrB,EADrB,qDA6BI,OACE,kBAAC,MAAD,CACEI,OAAQC,KAAKlB,MAAMiB,OACnBE,KAAM,EACNC,MAAOxB,EACPyB,cAAe,CAAEX,IAAK,OAAQE,KAAM,UAEnCM,KAAKjB,sBApCd,GAAkCqB,aA0CnBC,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZxB,GCjDeuB,YCAlBG,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,W","file":"static/js/main.125b5302.chunk.js","sourcesContent":["// apiKey={\"AIzaSyBE0UkRiAmqSrlp7TPazgP1tbPI9oSwnL8\"}\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\n\r\nconst mapStyles = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      stores: [\r\n        { latitude: 45.7723554, longitude: 15.9842587 },\r\n        { latitude: 45.822677, longitude: 16.105145 },\r\n      ],\r\n    };\r\n  }\r\n\r\n  displayMarkers = () => {\r\n    return this.state.stores.map((store, index) => {\r\n      return (\r\n        <Marker\r\n          key={index}\r\n          id={index}\r\n          position={{\r\n            lat: store.latitude,\r\n            lng: store.longitude,\r\n          }}\r\n          onClick={() => console.log(\"You clicked me!\")}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={8}\r\n        style={mapStyles}\r\n        initialCenter={{ lat: 47.444, lng: -122.176 }}\r\n      >\r\n        {this.displayMarkers()}\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyBE0UkRiAmqSrlp7TPazgP1tbPI9oSwnL8\",\r\n})(MapContainer);\r\n","import React, { Component } from \"react\";\r\nimport \"./Invitation.css\";\r\nimport guests from \"./resources/json/guests.json\";\r\nimport SimpleMapPage from \"./components/map\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    wedding_date: Date.parse(\"28 Nov 2020 16:30:00 GMT+0200\"),\r\n    remaining_days: 0,\r\n    remaining_hours: 0,\r\n    remaining_minutes: 0,\r\n    refreshed: true,\r\n    hash: \"\",\r\n    title: \"Poštovani\",\r\n    single_person: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    let search = window.location.search;\r\n    let params = new URLSearchParams(search);\r\n    let invite = params.get(\"invite\");\r\n    if (invite !== null) {\r\n      try {\r\n        let person = guests[invite];\r\n        this.setState({\r\n          hash: { invite },\r\n          title: person[\"title\"],\r\n          single_person: person[\"single_person\"],\r\n        });\r\n      } catch (Exception) {}\r\n    }\r\n    this.refreshRemainingTime();\r\n    this.refresh_countdown = setInterval(\r\n      this.refreshRemainingTime.bind(this),\r\n      15000\r\n    );\r\n  }\r\n\r\n  // Setting listener when component will mount\r\n  componentWillMount() {\r\n    window.addEventListener(\"resize\", this.handleWindowSizeChange(\"Resize\"));\r\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\r\n  }\r\n  // Removing listener when the component is not mounted anymore\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleWindowSizeChange);\r\n    clearInterval(this.refresh_countdown);\r\n  }\r\n\r\n  refreshRemainingTime() {\r\n    let remaining_time = this.state.wedding_date - Date.parse(new Date());\r\n    this.setState({\r\n      remaining_days: Math.floor(remaining_time / 1000 / 60 / 60 / 24),\r\n      remaining_hours: Math.floor((remaining_time / 1000 / 60 / 60) % 24),\r\n      remaining_minutes: Math.floor((remaining_time / 1000 / 60) % 60),\r\n    });\r\n  }\r\n\r\n  refresh_states() {\r\n    this.setState({ width: window.innerWidth });\r\n    this.setState({ height: window.innerHeight });\r\n  }\r\n\r\n  // Setting the width state\r\n  handleWindowSizeChange = (caller = \"Resize\") => {\r\n    this.refresh_states();\r\n  };\r\n\r\n  render() {\r\n    if (window.performance && this.state.refreshed) {\r\n      if (performance.navigation.type === 1) {\r\n        this.handleWindowSizeChange(\"Refresh\");\r\n        this.setState({ refreshed: false });\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"site\">\r\n        <div className=\"box text header\">\r\n          <h1>{this.state.title},</h1>\r\n          <h1>\r\n            ovim putem pozivamo {this.state.single_person ? \"te\" : \"vas\"} na\r\n            naše vjenčanje.\r\n          </h1>\r\n          <h1>\r\n            Sve informacije o nama i našem vječanju{\" \"}\r\n            {this.state.single_person ? \"možeš\" : \"možete\"} pronaći u retcima\r\n            ispod.\r\n          </h1>\r\n          <h1>\r\n            Veselimo se {this.state.single_person ? \"tvojem\" : \"vašem\"} dolasku,\r\n          </h1>\r\n          <h1>Vaši Dolores i Filip</h1>\r\n        </div>\r\n        <div className=\"biography\">\r\n          <div className=\"box about_doli_container doli_about_photo\">\r\n            <div className=\"box center text name\">Dolores</div>\r\n            <div className=\"center text about \">O Dolores</div>\r\n          </div>\r\n          <div className=\"box about_filip_container filip_about_photo\">\r\n            <div className=\"box center text name\">Filip</div>\r\n            <div className=\"center text about\">O Filipu</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"countdown\">\r\n          <div className=\"box days countdown_color\">\r\n            <div className=\"box center text countdown_title\">\r\n              {this.state.remaining_days % 10 === 1 ? \"Dan\" : \"Dana\"}\r\n            </div>\r\n            <div className=\"center text countdown_value\">\r\n              <h1>{this.state.remaining_days}</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"box hours countdown_color\">\r\n            <div className=\"box center text countdown_title\">\r\n              {this.state.remaining_hours % 10 === 1\r\n                ? \"Sat\"\r\n                : (this.state.remaining_hours <= 10 ||\r\n                    this.state.remaining_hours > 20) &&\r\n                  this.state.remaining_hours % 10 > 1 &&\r\n                  this.state.remaining_hours % 10 < 5\r\n                ? \"Sata\"\r\n                : \"Sati\"}\r\n            </div>\r\n            <div className=\"center text countdown_value\">\r\n              <h1>{this.state.remaining_hours}</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"box minutes countdown_color\">\r\n            <div className=\"box center text countdown_title\">\r\n              {(this.state.remaining_minutes <= 10 ||\r\n                this.state.remaining_minutes > 20) &&\r\n              this.state.remaining_minutes % 10 > 1 &&\r\n              this.state.remaining_minutes % 10 < 5\r\n                ? \"Minute\"\r\n                : \"Minuta\"}\r\n            </div>\r\n            <div className=\"center text countdown_value\">\r\n              <h1>{this.state.remaining_minutes}</h1>\r\n            </div>\r\n            <SimpleMapPage />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Invitation\";\r\nimport MapContainer from \"./components/map\";\r\n\r\nReactDOM.render(<MapContainer />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}